Introduction
	
	Dans ce premier rapport de projet en administration système et réseau, nous allons revenir sur le travail que nous avons effectué jusqu'à présent.

	Après avoir présenté l'objet de notre projet, nous allons l'inspecter  sous différents aspects. 
	Nous allons d'abord lister le cahier des charges, puis nous reformulerons les besoins du client en langage informatique. Ensuite, nous proposerons les solutions techniques éventuelles, en comparant les différentes alternatives envisageables. Nous présenterons la solution que nous avons décidé d'adopter en justifiant notre choix. Nous expliquerons ensuite la procédure de validation du déploiement de la solution que nous avons utilisée. Nous terminerons par faire un rapport de ce qui a été effectivement déployé, en s'adressant au client, et en tentant d'utiliser les termes techniques à bon escient.


But du projet

	Le but de notre travail de groupe est de simuler la gestion et l'administration réseau d'une petite entreprise. 
	Pour ce faire, nous allons mettre en place les différents éléments constitutifs de ce réseau sur un VPS mis à notre disposition. 
	Pour y parvenir, comme précisé dans les consignes de notre projet, nous utiliserons docker, afin d'isoler nos services les uns des autres dans différents containers. 

Cahier des charges

	Dans ce travail, nous allons mettre en place différents services web pour notre client. 	Celui-ci désire disposer d'un site web statique accessible partout sur internet au moyen d'un nom de domaine spécifique. D'un autre site web, toujours accessible depuis l'extérieur au moyen d'un nom de domaine, mais qui sera cette foi dynamique. Ce site web se connectera à une base de données pour récupérer les informations qu'il va afficher.
	Et enfin, d'un site web qui ne sera accessible que par ses employés, en intranet.
	Par ailleurs, l'ensemble des employés doivent disposer d'un accès internet.

Traduction des besoins du clients

	Si nous résumons les demandes du client, celui-ci désire bénéficier de plusieurs services réseaux différents. 
	Pour commencer, il voudrait disposer de plusieurs sites web différents. Deux sites statiques, et un site dynamique accessibles grâce à leur nom de  domaine. Le type d'hébergement de ceux-ci n'a pas été précisé. 
	Ensuite, il fait la demande d'utiliser une base de données pour alimenter son site dynamique. Celle-ci contiendra les données qui seront traitées niveau serveur pour générer la page web dynamique.
	Après, il désire qu'un de ses sites statiques ne soit accessible qu'en interne, par ses employés au sein du réseau d'entreprise.
	Enfin, il souhaite que les machines de son réseau disposent d'un accès à internet.

Proposition de solutions techniques

	Dans cette partie de rapport, nous allons revenir sur chaque demande du client, et faire correspondre différentes solutions techniques qui pourraient y répondrent.

	Premièrement, notre client désire disposer de sites web statiques, accessibles grâce à un nom de domaine. Ici déjà, plusieurs éléments devront être implémenter. Outre la création d'une page HTML et de sa feuille de style, il va falloir d'une part disposer d'un serveur web et d'autre part d'un serveur de résolution de noms. 									Pour le serveur web, nous pourrions choisir de louer les services d'un hébergeur distant, ou d'installer notre propre serveur au sein de l'entreprise. Si nous choisissons de mettre en place notre propre serveur, nous devrions choisir un logiciel à utiliser parmi les nombreuses possibilités qui s'offrent à nous.
	Afin de  permettre l'accès à internet, il va falloir s'occuper de la résolution de noms. S'il existe plusieurs serveurs DNS sur lesquels nous pourrions nous baser, il serait également possible de mettre en place un serveur de résolution de nom au sein du réseau d'entreprise que nous gérons.  
	
	Deuxièmement, notre client fait la demande de disposer d'un site web dynamique. Il s'agira de mettre en place une base de données, ainsi qu'une technologie permettant de générer une page web de manière dynamique. 
	Pour y parvenir, encore une fois, il existe de nombreuses possibilités différentes. Nous devrons choisir si nous allons louer les services d'un serveur web distant ou en développer un au sein de notre réseau. Si nous développons notre propre serveur, il va falloir choisir entre les différents logiciels offrant ce type de service, comme Apache ou Nginx par exemple. Il faudra ensuite choisir une technologie de programmation server-side pour coder nos pages web, comme PHP, Java ou Node.js. Puis, nous aurons à configurer notre serveur pour qu'il puisse interpréter correctement les requêtes HTTP qui lui seront transmises. Enfin, nous devrons installer un gestionnaire de base de données au sein  de notre entreprise qui communiquera avec notre serveur pour générer nos pages web. Il existe de nombreux SGBD que nous pourrions utiliser, comme Sybase, Postgres, ou Mysql par exemple.

	Troisièmement, nous devons disposer d'un site qui ne sera disponible qu'en interne. Pour ce faire, nous n’enregistrerons pas son nom de domaine dans notre serveur DNS, nous devront configurer notre serveur web pour qu'il n'envoie cette page qu'aux machines venant du réseau de l'entreprise.


Choix et justification de la solution
	
	Pour répondre aux demandes du client, nous avons choisi parmi différentes alternatives qui s'offraient à nous. Dans cette partie de notre rapport, nous allons présenter et justifier ces choix.
	
	Pour commencer, nous avons choisi d'installer chacun de nos différents services réseaux dans des containers docker dédiés, afin de les isoler les uns des autres. Cela nous permettra de tester nos configurations dans un environnement confiné, et augmentera la modularité de notre réseau.
	
	Ensuite, nous avons mis en place un serveur DNS pour notre entreprise. Nous avons choisi Bind car il s'agit du serveur DNS le plus utilisé sur internet, à tel point qu'il fait office de véritable standard.  

	Après, nous avons installé Nginx comme serveur web. Nous avons choisi cette alternative, car il s'agit d'un serveur web gratuit dont la popularité ne fait que croître au fil du temps. Nous avons choisi d'installer notre serveur nous même afin d'éliminer les coûts lié à l'hébergement distant, et de pouvoir le configurer comme nous l'entendions.
	Enfin nous avons installé Mysql server comme SGBD. Nous avons choisi Mysql car c'est un SGBD gratuit et facile d'utilisation. Par ailleurs, c'est le SGBD le plus largement utilisé sur le web  à l'heure actuelle.

Procédure de validation du déploiement

	Pour valider le déploiement que nous avons mis au point, il s'agira premièrement  de vérifier l'accès à nos sites destinés aux clients. Deuxièmement, il faudra vérifier que notre site à destination des employés ne soit accessible qu'au sein de notre réseau d'entreprise.

	Pour vérifier l'accès au site client, il va falloir pouvoir accéder à nos sites grâce à leur nom de domaine, sur n'importe quelle machine en dehors de notre VPS.

	Malheureusement, nous ne sommes pas encore arrivé à trouver le moyen de vérifier si notre site employé n'est accessible qu'au sein de notre réseau entreprise.

Rapport sur ce qui a été déployé

	Dans cette partie finale de projet, nous allons faire un récapitulatif de ce qui a été effectivement déployé.

	Nous sommes presque parvenu à mettre au point notre serveur de résolution de noms. Nous avons essayé de nombreuses configurations mais il manque quelques petits réglages avant que celui-ci ne soit parfaitement opérationnel.
	Nous sommes également arrivé à implémenter notre serveur web Nginx, ainsi qu'à héberger notre page web statique. Par contre, il faut  encore que nous installions un module pour permettre la génération de pages dynamiques en PHP. De plus, nous devons finir de configurer Nginx afin qu'il ne rende l'accès à notre page web intranet possible qu'à l'intérieur de notre réseau.
	Si notre serveur web ne prend pas encore en charge le PHP, nous avons déjà installé notre base de données Mysql. Nous avons créé notre tableau et inséré les données qui serviront à générer notre page web dynamique.
	Il nous reste donc plusieurs éléments à mettre au point pour rencontrer les attentes de cette première mission.  Régler la configuration de notre serveur de résolution de noms, télécharger un module Ngnix permettant la prise en charge de PHP et  configurer notre serveur pour restreindre l'accès à notre page web intranet depuis l'extérieur du réseau entreprise.

	Pour finir, nous allons parler des difficultés que nous avons rencontré jusqu’à présent. 
	Nous avons éprouvé beaucoup de mal à régler correctement la configuration de notre serveur DNS. Nous hésitons à continuer de travailler sur la version actulle, ou à recommencer à zéro.  Par ailleurs, nous ne sommes pas encore tout à fait à l'aise avec l'utilisation de docker, mais nous progressons. En plus de cela, nous avons encore des progrès à faire quant à  l'utilisation et à la configuration de Nginx. 
	Malgré ces points négatifs, nous pensons qu'il nous sera possible de récupérer notre retard avant l'échéance de la prochaine mission.
